version: '3'

services:


  es01:
    build:
      context: ./docker/elasticsearch
    container_name: es01
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data01:/usr/share/elasticsearch/data
    networks:
      - es-net

  es02:
    build:
      context: ./docker/elasticsearch
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,ex03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data02:/usr/share/elasticsearch/data
    networks:
      - es-net

  es03:
    build:
      context: ./docker/elasticsearch
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,ex02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data03:/usr/share/elasticsearch/data
    networks:
      - es-net

        #es-head:
        #  image: mobz/elasticsearch-head:latest
        #  container_name: es-head
        #  ports:
        #    - 9100:9100
  es-head:
    build:
      context: ./docker/elasticsearch-head
    container_name: es-head
    ports:
      - 9100:9100

  db:
    build:
      context: ./docker/mysql
    container_name: db
    ports:
      - 3306:3306
    volumes:
      - db-data:/var/lib/mysql
      - ./resources/mysql:/tmp/resources
    networks:
      - es-net
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=${MYSQL_ALLOW_EMPTY_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${TZ}
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --local-infile=1

  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - 8080:8080
    networks:
      - es-net

  es-logstash:
    build:
      context: ./docker/logstash
    container_name: es-logstash
    volumes:
      - ./resources/logstash/conf:/tmp/conf
      - ./resources/logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${TZ}
    networks:
      - es-net


volumes:
  es-data01:
    driver: local
  es-data02:
    driver: local
  es-data03:
    driver: local
  db-data:
    driver: local

networks:
  es-net:
